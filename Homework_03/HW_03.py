from google import generativeai as genai
import os
from dotenv import load_dotenv
from rich.console import Console
from rich.panel import Panel
from rich.text import Text
import time


console = Console()

def main():
    load_dotenv(override=True)

    GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")

    if not GEMINI_API_KEY:
        console.print(
            Panel.fit(
                "[bold red]–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω API-–∫–ª—é—á Gemini[/bold red]\n"
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:\n"
                "1. –§–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç 'GEMINI_API_KEY=–≤–∞—à_–∫–ª—é—á'\n"
                "2. –ö–ª—é—á –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤/–∫–∞–≤—ã—á–µ–∫\n"
                "3. –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–∑ —Ç–æ–π –∂–µ –ø–∞–ø–∫–∏, –≥–¥–µ –ª–µ–∂–∏—Ç .env",
                title="–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏",
                border_style="red"
            )
        )
        return

    console.print("[green]API-–∫–ª—é—á Gemini —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω![/green]")

    try:
        genai.configure(api_key=GEMINI_API_KEY)

        model = genai.GenerativeModel('gemini-pro')

        console.print(
            Panel.fit(
                "[bold green]ü§ñ Gemini AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω[/bold green]",
                subtitle="–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google AI Studio",
                border_style="green"
            )
        )

        with console.status("[bold cyan]–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏...[/bold cyan]") as status:
            time.sleep(2)

        prompt = "–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–≥–æ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞."

        console.print(
            Panel.fit(
                f"[bold yellow]–í–∞—à –∑–∞–ø—Ä–æ—Å:[/bold yellow] [white]{prompt}[/white]",
                title="üìù –í–≤–æ–¥",
                border_style="yellow"
            )
        )

        response = model.generate_content(prompt)

        console.print(
            Panel.fit(
                Text.from_markup(response.text),
                title="üí° –û—Ç–≤–µ—Ç Gemini",
                border_style="blue",
                subtitle="–û—Ç–≤–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω",
                padding=(1, 4)
            )
        )
        console.print(
            Panel.fit(
                "[italic]–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∏–∞–ª–æ–≥, –∏–∑–º–µ–Ω–∏–≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é 'prompt'[/italic]",
                border_style="dim"
            )
        )

    except Exception as e:
        console.print(
            Panel.fit(
                f"[bold red]–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:[/bold red]\n{str(e)}",
                title="–û—à–∏–±–∫–∞",
                border_style="red"
            )
        )


if __name__ == "__main__":
    main()
